<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Basketball | Developer's Perception]]></title>
  <link href="http://elgsdyret.github.io/blog/categories/basketball/atom.xml" rel="self"/>
  <link href="http://elgsdyret.github.io/"/>
  <updated>2013-05-30T19:24:09+02:00</updated>
  <id>http://elgsdyret.github.io/</id>
  <author>
    <name><![CDATA[Nikolaj Kaare NÃ¸rskov]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Basket, Frameworks, Empowerment, and the Holy Goat]]></title>
    <link href="http://elgsdyret.github.io/blog/2011/09/29/basket-frameworks-empowerment-and-holy/"/>
    <updated>2011-09-29T09:40:00+02:00</updated>
    <id>http://elgsdyret.github.io/blog/2011/09/29/basket-frameworks-empowerment-and-holy</id>
    <content type="html"><![CDATA[<p>First of a few disclaimers : The title of this post probably does not make a lot of sense (if any). Any perceived person and/or organization in this blog post is not intended &ndash; it is based on my experience in several projects, for different companies, and different clients.</p>

<p>This is my first blog post ever!</p>

<p>Chronologically, considering the title of the post, I should write something about basket first. Actually, this post is not about basket at all, but just had to show this great picture of developers from Ukraine and Denmark after playing a bit of basket in the sun.</p>

<p><img src="/images/basket.jpg"></p>

<p>After this short detour lets get back on the track to what I actually want to write a bit about &ndash; what motivates a developer.</p>

<p>Ramble: It seems to be the perception from people looking at developers from the outside, be it managers, project managers, or people from the street that all developers care about is playing with new toys (languages, frameworks, new hardware, or gadgets).</p>

<p>While most developers love new toys (like women love new shoes), what motivates a developer is actually far more nuanced than just the urge to try new stuff. Albeit, some developers are motivated by money, most I have met (including myself) are motivated by an urge to craft software and learn. We want to craft stuff smarter, faster, with fewer bugs, and better features.</p>

<p>This is probably why developers in start-up companies seem to be more motivated &ndash; they have a clean slate and can craft and learn according to what is the smartest (perceived!) way of working at that point in time. After a few years what was smartest back in the beginning is probably not the smartest anymore, but more importantly the developers have learned a lot, and can now do even smarter (again perceived) stuff. But at this time the products and systems they work on have a lot of customers, thus the level of risk the business is willing to take decrease dramatically &ndash; meaning the developers get to craft and learn less. Thus, eventually the developers will become demotivated (seems to be close to a law of nature &ndash; at least from my personal experience).</p>

<p>There are a couple of challenges with demotivated developers.</p>

<ul>
<li>Retention becomes harder.</li>
<li>Hiring becomes harder.</li>
</ul>


<p>In the very best scenarios the developers are also very professional people (they do get paid) and will do their job adequately &ndash; but they will never do a GREAT job. For that they need to be motivated.</p>

<h3>Avoiding this trap?</h3>

<p>If it was easy less software products/ projects would fail. Nevertheless, I believe there is a path. Good developers have the urge to craft and learn just as strongly as all other developers, maybe even stronger. But, more importantly good developers also understand the business and the customers. Thus, a good developer would be able to determine quite well when to take which risks regarding which frameworks, languages, platforms, methodologies, etc. are used. A good developer also understands that not all risks should be taken at the same time: In general the good developer will be able to help guide the direction of the software.</p>

<p>Thus, to have motivated developers your need to empower the developer (does not mean no control &ndash; just more influence). This may sound risky, and indeed it is. If you empower a bad developer the results will not be nice &ndash; probably close to catastrophic. If you empower a good developer you are not guaranteed success, but you know that at the very least he will fight to succeed.</p>

<p>Soooo&hellip; empowerment is risky even with good developers (if you are choosing not to empower your developers because you believe they are bad I can only ask why the hell you are hiring bad developers (and keeping them)).</p>

<p>What&rsquo;s the alternative? Demotivated developers&hellip;. I honestly do not believe you can successfully run a business based on software with demotivated developers working on it &ndash; it will fail, sooner or later &ndash; if you don&rsquo;t change.</p>

<h3>How much?</h3>

<p>So how much should you empower your developers? This is not easy either &ndash; for some developers you can give almost free reins &ndash; while others need a quite firm hand controlling.</p>

<p>If I find the solution for this last bit, I will be sure to let you know :&ndash;)</p>

<p>/Ramble</p>
]]></content>
  </entry>
  
</feed>
